{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","useDispatch","className","onSubmit","email","password","preventDefault","a","resp","json","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus","clone","initEvent","notes","CalendarModal","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","evento","console","log","getState","_id","eventStartAddNew","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b68ffd6c.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout event',\r\n    eventAddNew: '[event] Add new',\r\n    eventUpdate: '[event] Update',\r\n    eventDelete: '[event] Delete',\r\n    eventLoaded: '[event] Loaded',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start Login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(), //new Date()\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Yopues'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            };\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = (endpoint, data, method) => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchConToken = (endpoint, data, method) => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (!!body.id) {\r\n                event.id = body.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nexport const eventAddNew = (event) => (\r\n    {\r\n        type: types.eventAddNew,\r\n        payload: event\r\n    }\r\n);\r\n\r\nexport const eventSetActive = (event) => (\r\n    {\r\n        type: types.eventSetActive,\r\n        payload: event\r\n    }\r\n);\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (!!body.evento) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => (\r\n    {\r\n        type: types.eventUpdate,\r\n        payload: event\r\n    }\r\n);\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.msg === 'El evento ha sido eliminado') {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDelete });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events', {}, 'GET');\r\n            const body = await resp.json();\r\n\r\n            const eventos = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(eventos));\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => (\r\n    {\r\n        type: types.eventLoaded,\r\n        payload: events\r\n    }\r\n);\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout })","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (!!body.token) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (!!body.uid) {\r\n            Swal.fire('Nice', 'El usuario ha sido creado', 'success');\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew', {}, 'GET');\r\n        const body = await resp.json();\r\n\r\n        if (!!body.token) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'ema2il@email.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Puto',\r\n        rEmail: 'ema2il@email.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword2, rName));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='rPassword1'\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name='rPassword2'\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>\r\n                {name}\r\n            </span>\r\n\r\n            <button\r\n                className='btn btn-outline-danger'\r\n                onClick={handleLogout}\r\n            >\r\n                <i className='fas fa-sign-out-alt' />\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <>\r\n            <strong>{title}</strong>\r\n            <span>{user.name}</span>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(formValues.start);\r\n        const momentEnd = moment(formValues.end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('La fecha final debe de ser mayor a la fecha de inicio', '', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return Swal.fire('El título es requerido', '', 'error');\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        closeModal();\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            className='modal'\r\n            overlayClassName='modal-fondo'\r\n        >\r\n            <h1>{(!!activeEvent) ? 'Editar evento' : ' Nuevo evento'} </h1>\r\n            <hr />\r\n            <form\r\n                onSubmit={handleSubmitForm}\r\n                className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={start}\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={end}\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActiveEvent } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn btn-primary fab'\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className='fas fa-plus' />\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn btn-danger fab-danger'\r\n            onClick={handleDelete}\r\n        >\r\n            <i\r\n                className='fas fa-trash'\r\n            />\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        localStorage.setItem('lastView', e);\r\n        setLastView(e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor='start'\r\n                endAccessor='end'\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n            />\r\n\r\n\r\n            {\r\n                (!!activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <AddNewFab />\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={props => (isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to='/login' />)\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={props => (!isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to='/' />)\r\n            }\r\n        />\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path='/login'\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/'\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to='/' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}